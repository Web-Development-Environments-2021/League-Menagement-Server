openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  version: 1.0.0
tags:
- name: admin
  description: Secured Admin-only calls
- name: user
  description: Information about the users
- name: player
  description: Information about the players
- name: coache
  description: Information about the coaches
- name: team
  description: Information about the teams
- name: game
  description: Information about the gemes
- name: league
  description: Information about the league
- name: referee
  description: Information about the referee
paths:
  /register:
    post:
      tags:
      - user
      summary: this is the register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignUp'
        required: true
      responses:
        "201":
          description: ok created
  /login:
    post:
      tags:
      - admin
      - user
      summary: this is the login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogIn'
        required: true
      responses:
        "201":
          description: ok login
        "401":
          description: Username or Password incorrect
        "403":
          description: Username or Password incorrect
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /playerPreviewDetails/:playerId:
    get:
      tags:
      - player
      responses:
        "200":
          description: short display of player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playerObject'
        "402":
          description: player not found
  /playerFullDetails/:playerId:
    get:
      tags:
      - player
      responses:
        "200":
          description: full display of player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playerObject'
        "402":
          description: player not found
  # /getAllTeamsByCountry/:COUNTRY_ID:
  #   get:
  #     tags:
  #     - team
  #     responses:
  #       "200":
  #         description: find all teams by their country
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '??'
  #       "402":
  #         description: player not found
  /coachPreviewDetails/:coachId:
    get:
      tags:
      - coache
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cocahObject'
        "402":
          description: coach not found
  /teams/teamFullDetails/{teamId}: 
    get:
      tags:
      - team
      description: return full details of team
      operationId: getMyTeams
      parameters:
        - name: teamId
          in: path
          description: team id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 211
      responses:
        "200":
          description: team found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
        "404":
          description: team is not exists
  /users/getFavoriteGames:
    get:
      tags:
        - game
        - user
      responses:
        "200":
          description: games found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /users/addFavoriteGames:
    post:
      tags:
        - game
        - user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                game_id:
                  type: string
                  description: desired game_id
                  example: 17948787
      responses:
        "201":
          description: The game successfully saved as favorite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /league/add&getRandFutureGames:
    get:
      tags:
      - game
      - league
      - admin
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/futureGame'
  /league/getPastGame:
    get:
      tags:
      - games
      - league
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pastGame'
        "402":
          description: no game in the past
  /league/getFutureGame:
    get:
      tags:
      - games
      - league
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/futureGame'
        "402":
          description: no game in the future
  /league/addReferee:
    post:
      tags:
      - league
      - referee
      summary: add new referee that he is allready a user in system. this can be exectuted only by the representative.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refereeObject'
      responses:
        '201': 
            description: ok created
        '404':
            description: bad inputs
  /league/getDetails:
    get:
      tags:
        - league
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
        "400":
          description: wrong input parameters
  /league/addNewLeague:
    post:
      tags:
      - admin
      - league
      summary: create new league
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
        required: true
      responses:
        "201":
          description: ok created
        "401":
          description: league allready exist
        "403":
          description: user doesn't have permission
  /league/insertNewGame/:
    post:
      tags:
        - league
      summary: insert details for create new game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newGame'
      responses:
        "200":
          description: insert details to create future game, this endpoint can access only by the Representative
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/newGame"
        "400":
          description: wrong input parameters
  /search/teams/{searchQuery}:
    get:
      tags:
      - team
      - player
      summary: search for teams by subset sting of the team name
      operationId: search
      parameters:
      - name: searchQuery
        in: path
        description: free text for search
        required: true
        schema:
          type: string
          example: Horsens
      responses:
        "200":
          description: search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/teams_short_preview'
        "204":
          description: nothing show
        "400":
          description: bad input parameter
  /search/players/{searchQuery}:
    get:
      tags:
      - players
      summary: search for player by subset string of his name
      parameters:
        - name: searchQuery
          in: path
          description: subset string of the player name
          required: true
          schema: 
            type: string
            example: johan
      responses:
        "200":
          description: player found
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/playerObject'
        "400":
          description: player not found
  /search/players/{searchQuery}/filterByPosition/{positionName}:
    get:
      tags:
      - players
      summary: search for player by subset string of his name and filter with his position
      parameters:
        - name: searchQuery
          in: path
          description: subset string of the player name
          required: true
          schema: 
            type: string
            example: johan
        - name: positionName
          in: path
          description: string of the player position
          required: true
          schema: 
            type: string
            example: Defender
      responses:
        "200":
          description: player found and his position
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/playerObject'
        "400":
          description: player not found
  /search/players/{searchQuery}/filterByTeam/{teamName}:
    get:
      tags:
      - players
      summary: search for player by subset string of his name
      parameters:
        - name: searchQuery
          in: path
          description: subset string of the player name
          required: true
          schema: 
            type: string
            example: johan
        - name: teamName
          in: path
          description: string of the player team name
          required: true
          schema: 
            type: string
            example: Nordsjælland
      responses:
        "200":
          description: player found
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/playerObject'
        "400":
          description: player not found
components:
  schemas:
    userSignUp:
      required:
      - confirmationpassword
      - country
      - email
      - firstname
      - lastname
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 5
          type: string
          description: username contains between 3 to 8 letters and digits only
          example: Yosef_Shoei
        firstname:
          type: string
          description: user's fisrt name
          example: Yosef
        lastname:
          type: string
          description: user's last name
          example: Shoei
        country:
          type: string
          description: user's last name
          example: israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password must contians between 6 to 10 chars, at least one char and one spicial letter
          format: password
          example: $5r5r5r5
        confirmationpassword:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password must contians between 6 to 10 chars, at least one char and one spicial letter example: $5r5r5r5
          format: password
          example: $5r5r5r5
        email:
          type: string
          description: user's email
          format: email
          example: jon@doe.com
        imgae-url:
          type: string
          description: URL for the user's image
          format: URL
          example: http://cloudinary.com/
    userLogIn:
      type: object
      properties:
        username:
          type: string
          example: roi
        password:
          type: string
          example: roi12345
    playerObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
        playerposition:
          type: string
          example: Goolkeeper
    playerFullObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
        playerposition:
          type: string
          example: Goolkeeper
        common_name:
          type: string
          example: j.james
        nationality:
          type: string
          example: belgium
        birthcountry:
          type: string
          example: spain
        birthdate:
          type: date
          example: 1997-12-23
        height:
          type: float
          example: 1.8
        weight:
          type: float
          example: 80
    cocahObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
    cocahFullObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
        common_name:
          type: string
          example: j.james
        nationality:
          type: string
          example: israel
        birthcountry:
          type: string
          example: spain
        birthdate:
          type: date
          example: 1994-09-12
    refereeObject:
      type: object
      properties:
        firstName:
          type: string
          example: Yosef
        lastName: 
          type: string
          example: Shouei
        qualification:
          type: string
          example: runing
  
    Game:
      type: object
      properties:
        date:
          type: string
          example: "2021-05-16T11:00:00"
        home_team_name:
          type: string
          example: Midtjylland
        away_team_name:
          type: string
          example: Randers
        field:
          type: string
          example: MCH Arena
        home_score:
          type: int
          example: 1
        away_score:
          type: int
          example: 1
        winner:
          example: Draw
    pastGame:
      type: object
      properties:
        date:
          type: string
          example: "2021-05-16T11:00:00"
        home_team_name:
          type: string
          example: Midtjylland
        away_team_name:
          type: string
          example: Randers
        field:
          type: string
          example: MCH Arena
        winner:
          example: Draw
    futureGame:
      type: object
      properties:
        date:
          type: string
          example: "2021-05-16T11:00:00"
        home_team_name:
          type: string
          example: Midtjylland
        away_team_name:
          type: string
          example: Randers
        field:
          type: string
          example: MCH Arena
        winner:
          example: none
    teams_short_preview:
      type: object
      properties:
        id:
          type: string
          example: "1234"
        team_name:
          type: string
          example: team
        logo_path:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
    team:
      type: object
      properties:
        id:
          type: string
          example: "123"
        team_name:
          type: string
          example: barcelona
        logo_path:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        players:
          type: array
          items:
            $ref: "#/components/schemas/playerObject"
    search:
      type: object
      properties:
        query:
          type: string
          example: messi
        numOfResults:
          type: integer
          example: 5
        category:
          type: string
          example: team
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        home_team:
          type: string
          description: team name
          example: Midtjylland  
        away_team:    
          type: string
          description: team name
          example: Horsens
        date:  
          type: string
          description: date of the game
          example: "21-12-10"
        field:  
          type: string
          description: field of the game 
          example: Meadowbank Dorking  
    newGame:
      type: object
      properties:
        date:
          type: string
          example: "2021-08-12"
        time:
          type: string
          example: "16:00:00"
        league_name:
          type: string
          example: superleague
        home_team_name:
          type: string
          example: Midtjylland
        away_team_name:
          type: string
          example: Horsens
        field:
          type: string
          example: Meadowbank Dorking
        referee:
          type: string
          example: Yosef Shoei
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:3000