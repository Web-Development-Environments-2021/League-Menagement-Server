openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  version: 1.0.0
tags:
- name: admin
  description: Secured Admin-only calls
- name: user
  description: Information about the users
- name: player
  description: Information about the players
- name: coache
  description: Information about the coaches
- name: team
  description: Information about the teams
- name: game
  description: Information about the gemes
- name: league
  description: Information about the league
paths:
  /register:
    post:
      tags:
      - user
      summary: this is the register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignUp'
        required: true
      responses:
        "201":
          description: ok created
  /login:
    post:
      tags:
      - admin
      - user
      summary: this is the login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogIn'
        required: true
      responses:
        "201":
          description: ok login
        "401":
          description: user dosn't exist
        "403":
          description: user don't have permission
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /playerPreviewDetails/:playerId:
    get:
      tags:
      - player
      responses:
        "200":
          description: short display of player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playerObject'
        "402":
          description: player not found
  /playerFullDetails/:playerId:
    get:
      tags:
      - player
      responses:
        "200":
          description: full display of player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playerObject'
        "402":
          description: player not found
  /getAllTeamsByCountry/:COUNTRY_ID:
    get:
      tags:
      - teams
      responses:
        "200":
          description: find all teams by their country
          content:
            application/json:
              schema:
                $ref: '??'
        "402":
          description: player not found
  /coachPreviewDetails/:coachId:
    get:
      tags:
      - coache
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cocahObject'
        "402":
          description: coach not found
  /teams/teamFullDetails/{teamId}: 
    get:
      tags:
      - teams
      description: return full details of team
      operationId: getMyTeams
      parameters:
        - name: teamId
          in: path
          description: team id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 123434
      responses:
        "200":
          description: team found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
        "404":
          description: teamId is not exists
  /users/getFavoriteGames:
    get:
      tags:
        - game
        - user
      responses:
        "200":
          description: games found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /users/addFavoriteGames:
    post:
      tags:
        - game
        - user
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /league/add&getRandFutureGames:
    get:
      tags:
      - game
      - league
      - admin
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/futureGame'
  /league/getPastGame:
    get:
      tags:
      - games
      - league
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pastGame'
        "402":
          description: no game in the past
  /league/getFutureGame:
    get:
      tags:
      - games
      - league
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/futureGame'
        "402":
          description: no game in the future
  /search/player/{searchQuery}:
    get:
      tags:
      - team
      - player
      summary: returns list of search result (team\player)
      operationId: search
      parameters:
      - name: searchQuery
        in: path
        description: free text for search
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/search'
      responses:
        "200":
          description: search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/result'
        "204":
          description: nothing found
        "400":
          description: bad input parameter
  /league/getDetails:
    get:
      tags:
        - league
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
        "400":
          description: wrong input parameters
  /league/addNewLeague/:league_name:
    post:
      tags:
      - admin
      - league
      summary: create new league
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
        required: true
      responses:
        "201":
          description: ok created
        "401":
          description: league allready dosn't exist
        "403":
          description: user doesn't have permission
  /insertNewGame/{date}/{time}/{league_name}/{home_team_name}/{away_team_name}/{field}:
    get:
      tags:
        - league
      summary: insert details for create new game
      parameters:
        - name: date
          in: path
          description: date
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 2021-08-12
        - name: time
          in: path
          description: time
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 16:00:00
        - name: league_name
          in: path
          description: league_name
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: superleague
        - name: home_team_name
          in: path
          description: home_team_name
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: Midtjylland
        - name: away_team_name
          in: path
          description: away_team_name
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: Midtjylland
        - name: field
          in: path
          description: field
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: Meadowbank Dorking
      responses:
        "200":
          description: insert details to create future game, this endpoint can access only by the Representative
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/futureGame"
        "400":
          description: wrong input parameters 
components:
  schemas:
    userSignUp:
      required:
      - confirmationpassword
      - country
      - email
      - firstname
      - lastname
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 5
          type: string
          description: username contains between 3 to 8 letters and digits only
          example: BIBI is the best
        firstname:
          type: string
          description: user's fisrt name
          example: BIBI
        lastname:
          type: string
          description: user's last name
          example: The king
        country:
          type: string
          description: user's last name
          example: god's land
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password must contians between 6 to 10 chars, at least one char and one spicial letter
          format: password
          example: $5r5r5r5
        confirmationpassword:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password must contians between 6 to 10 chars, at least one char and one spicial letter example: $5r5r5r5
          format: password
        email:
          type: string
          description: user's email
          format: email
          example: jon@doe.com
        imgae-url:
          type: string
          description: URL for the user's image
          format: URL
          example: http://com.cloudinary://https
    userLogIn:
      type: object
      properties:
        username:
          type: string
          example: bibi
        password:
          type: string
          example: $5r5r5r5
    playerObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
        playerposition:
          type: string
          example: Goolkeeper
    playerFullObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
        playerposition:
          type: string
          example: Goolkeeper
        common_name:
          type: string
          example: j.james
        nationality:
          type: string
          example: belgium
        birthcountry:
          type: string
          example: spain
        birthdate:
          type: date
          example: 1997-12-23
        height:
          type: float
          example: 1.8
        weight:
          type: float
          example: 80
    cocahObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
    cocahFullObject:
      type: object
      properties:
        image-url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        playername:
          type: string
          example: israel
        teamname:
          type: string
          example: Beitar Jerusalem F.C.
        common_name:
          type: string
          example: j.james
        nationality:
          type: string
          example: israel
        birthcountry:
          type: string
          example: spain
        birthdate:
          type: date
          example: 1994-09-12
    Game:
      type: object
      properties:
        date:
          type: string
          example: 10 May 2021
        time:
          type: string
          example: "1080"
        hostTeam:
          type: string
          example: Beitar Jerusalem F.C.
        gusetTeam:
          type: string
          example: Arab F.C
        referee:
          type: string
          example: yosef shouei
        field:
          type: string
          example: Meadowbank Dorking
        winner:
          example: Midtjylland
        gamesSchedule:
          example: 10 May 2021
    pastGame:
      type: object
      properties:
        date:
          type: string
          example: 10 May 2021
        time:
          type: string
          example: "1080"
        hostTeam:
          type: string
          example: Beitar Jerusalem F.C.
        gusetTeam:
          type: string
          example: Arab F.C
        referee:
          type: string
          example: yosef shouei
        filed:
          type: string
          example: Tedi
        winner:
          type: string
          example: Midtjylland
        date:
          example: 2021-12-12
    futureGame:
      type: object
      properties:
        date:
          type: string
          example: 10 May 2021
        time:
          type: string
          example: "1080"
        hostTeam:
          type: string
          example: Beitar Jerusalem F.C.
        gusetTeam:
          type: string
          example: Arab F.C
        referee:
          type: string
          example: yosef shouei
        filed:
          type: string
          example: Tedi
    result:
      type: object
      properties:
        id:
          type: string
          example: "1234"
        category:
          type: string
          example: team
    team:
      type: object
      properties:
        id:
          type: string
          example: "123"
        team_name:
          type: string
          example: barcelona
        logo_url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/he/3/3/BeitarJerusalemCrestStar2020.png
        players:
          type: array
          items:
            $ref: "#/components/schemas/playerObject"
    search:
      type: object
      properties:
        query:
          type: string
          example: messi
        numOfResults:
          type: integer
          example: 5
        category:
          type: string
          example: team
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/shi67/fbs/1.0.0